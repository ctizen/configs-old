
;;; my-lsp --- Language server support

(require 'lsp-ui-sideline "~/.emacs.d/lsp-ui/lsp-ui-sideline.el")
(require 'lsp-ui-peek "~/.emacs.d/lsp-ui/lsp-ui-peek.el")
(require 'lsp-ui-flycheck "~/.emacs.d/lsp-ui/lsp-ui-flycheck.el")
(require 'lsp-ui-imenu "~/.emacs.d/lsp-ui/lsp-ui-imenu.el")
(require 'lsp-ui-doc "~/.emacs.d/lsp-ui/lsp-ui-doc.el")
(require 'lsp-ui "~/.emacs.d/lsp-ui/lsp-ui.el")

(add-hook 'lsp-mode-hook 'lsp-ui-mode)

(defun lsp-dart-toggle-sideline ()
  "Toggle help sideline."
  (interactive)
  (cond
   ((= lsp-ui-sideline-enable t)
    (setq lsp-ui-sideline-enable nil))
   ((= lsp-ui-sideline-enable nil)
    (setq lsp-ui-sideline-enable t))
   ))
(global-set-key (kbd "C-M-h") 'lsp-dart-toggle-sideline)

(defun lsp-set-vars ()
  "Set lsp vars."
  (setq lsp-ui-sideline-enable nil)
  (setq lsp-ui-sideline-show-code-actions nil)
  (setq lsp-ui-sideline-show-hover t)
  (setq lsp-ui-sideline-show-symbol nil)
  (setq lsp-ui-doc-header t)
  (setq lsp-ui-doc-max-height 10)
  (setq lsp-ui-doc-use-childframe t)
  (setq lsp-ui-doc-position (quote bottom)))
(add-hook 'lsp-mode-hook #'lsp-set-vars)

(require 'company-lsp)
(push 'company-lsp company-backends)
(setq company-lsp-async t)

(require 'lsp-mode)

;;; Dart lsp config
(lsp-define-stdio-client
 ;; This can be a symbol of your choosing. It will be used as a the
 ;; prefix for a dynamically generated function "-enable"; in this
 ;; case: lsp-prog-major-mode-enable
 lsp-dart-major-mode
 "dart"
 ;; This will be used to report a project's root directory to the LSP
 ;; server.
 (lambda () default-directory)
 ;; This is the command to start the LSP server. It may either be a
 ;; string containing the path of the command, or a list wherein the
 ;; car is a string containing the path of the command, and the cdr
 ;; are arguments to that command.
 '("dart_language_server"))

;; Here we'll add the function that was dynamically generated by the
;; call to lsp-define-stdio-client to the major-mode hook of the
;; language we want to run it under.
;;
;; This function will turn lsp-mode on and call the command given to
;; start the LSP server.
(add-hook 'dart-mode-hook #'lsp-dart-major-mode-enable)

(define-key lsp-ui-mode-map [remap xref-find-references] #'lsp-ui-peek-find-references)

;;; Code:
;;;
